pico-8 cartridge // http://www.pico-8.com
version 42
__lua__
--main

--next task:
-- camera logic?
-- implement npcs
-- add logic to render multiple sprites
-- add logic to delete sprites out of frame
-- implement hit boxes (if two players are in conflict, if the hitbox intersects with the player then damage is taken)
-- implement camera shake
-- more animations can be created to enhance experience
-- add a timer (bar) to indicate how long you can hold the bat up
-- (refactoring) make functions for each movement and change the function pointer for that movement in the plr object
function _init()
	x_offset = 0
	y_offset = 0
	init_player()
	init_env()
	init_menu()
	
	degug_p = ""
	debug_c = ""
end

function _update()
	if(not(menu_up)) then
		set_state()
		plr_vel()
		move(plr)
		animate_frame(plr)
	else
		menu_logic()
	end
	menu_listener()
end

function _draw()
	cls()
	map(x_offset, y_offset)
	if(not(menu_up)) then
		draw_spr(plr)
		//print(plr.gvx)
		//print(plr.vx)
	else
		draw_menu()
	end
end
-->8
--player

--note: when the fish and the
--bat are moving, make the trail
--behind them
function init_player()
	plr = {
		x = 30,
		y = 30,
		w = 1,
		h = 1,
		i = 1,
		t = time(),
		t_m = time(),
		flp = false,
		mode = "human",
		state = "walk",
		vx = 0,
		vy = 0,
		gvx = 0,
		vis = true,
		human = {
			speed = 10,
			jump_height = -20,
			gx1 = 2,
			gx2 = 4,
			gy = 8,
			topmost = 6,
			bottommost = 0,
			leftmost = 0,
			rightmost = 6,
			idle = {
				sprites = {192,193,194,195},
				n = 4,
				dt = 0.13,
			},
			walk = {
				sprites = {208, 209, 210, 211, 212, 213, 214},
				n = 7,
				dt = 0.05,
			},
			jump = {
				sprites = {206},
				n = 1,
				dt = 0.15,
			},
			fall = {
				sprites = {207},
				n = 1,
				dt = 0.15,
			},
			midjump = {
				sprites = {215},
				n = 1,
				dt = 0.15,
			},
		},
		frog = {
			speed = 5,
			jump_height = -40,
			gx1 = 1,
			gx2 = 5,
			gy = 8,
			topmost = 6,
			bottommost = 0,
			rightmost = 7,
			leftmost = 0,
			idle = {
				sprites = {216,217},
				n = 2,
				dt = 0.17,
			},
			walk = {
				sprites = {216,217,218,219,220,221,222,223},
				n = 8,
				dt = 0.08,
			},
			jump = {
				sprites = {239},
				n = 1,
				dt = 0.15,
			},
			fall = {
				sprites = {222},
				n = 1,
				dt = 0.15,
			},
			midjump = {
				sprites = {218},
				n = 1,
				dt = 0.15,
			},
		},
		rhino = {
			speed = 20,
			jump_height = -20,
			gx1 = 1,
			gx2 = 4,
			gy = 8,
			topmost = 5,
			bottommost = 0,
			rightmost = 7,
			leftmost = 0,
			idle = {
				sprites = {202,203,204,205},
				n = 4,
				dt = 0.1,
			},
			walk = {
				sprites = {196,197,198,199,200,201},
				n = 6,
				dt = 0.05,
			},
			jump = {
				sprites = {197},
				n = 1,
				dt = 0.15,
			},
			fall = {
				sprites = {200},
				n = 1,
				dt = 0.15,
			},
			midjump = {
				sprites = {201},
				n = 1,
				dt = 0.15,
			},
		},
		bat = {
			speed = 5,
			jump_height = -10,
			gx1 = 3,
			gx2 = 4,
			gy = 6,
			topmost = 3,
			bottommost = 2,
			leftmost = 0,
			rightmost = 7,
			idle = {
				sprites = {234,235,236,237},
				n = 4,
				dt = 0.15,
			},
			jump = {
				sprites = {224,225,226,227,228,229,230,231,232,233},
				n = 10,
				dt = 0.005,
			},
		},
		fish = {
			gx1 = 4,
			gx2 = 6,
			gy = 7,
			speed = 2,
			topmost = 6,
			bottommost = 1,
			rightmost = 7,
			leftmost = 0,
			idle = {
				sprites = {240,241,242,243,244,245,245,246,247},
				n = 7,
				dt = 0.05,
			},
			walk = {
				sprites = {240,241,242,243,244,245,245,246,247},
				n = 7,
				dt = 0.05,
			},
		},

	}
end

--implement interpolation
function plr_vel()
	if(plr.mode == "bat") then
		bat_vel()
	else
		if(btn(‚û°Ô∏è)) then
			plr.gvx = get_speed(plr)
			plr.flp = false
		elseif(btn(‚¨ÖÔ∏è)) then
			plr.gvx = get_speed(plr) * -1
			plr.flp = true
		else
			plr.gvx = 0
		end
		if(btnp(‚¨ÜÔ∏è) and on_ground(plr)) then
			plr.vy = get_jump_height(plr)
		end
	end
end

function bat_state()
	local prev_state = plr.state
	if(not(on_ground(plr))) then
		plr.state = "jump"
	else
		plr.state = "idle"
	end
	if(plr.state ~= prev_state) then
		set_i(plr,1)
	end
end

function bat_vel()
	local grnd = on_ground(plr)
	if(btnp(‚¨ÜÔ∏è)) then
		plr.vy = get_jump_height(plr)
	end
	if(btn(‚û°Ô∏è) and not(grnd)) then
		plr.gvx = get_speed(plr)
		plr.flp = false
	elseif(btn(‚¨ÖÔ∏è) and not(grnd)) then
		plr.gvx = get_speed(plr) * -1
		plr.flp = true
	elseif(btn(‚¨ÖÔ∏è)) then
		plr.flp = true
	elseif(btn(‚û°Ô∏è)) then
		plr.flp = false
	else
		plr.vx = 0
		plr.gvx = 0
	end
end

function set_state()
	if(plr.mode == "bat") then
		bat_state()
		return
	end
	local grnd = on_ground(plr)
	local prev_state = plr.state
	local can_jump = plr.mode == "human" or plr.mode == "frog" or plr.mode == "rhino"
	if((btn(‚û°Ô∏è) or btn(‚¨ÖÔ∏è)) and grnd) then
		plr.state = "walk"
	elseif(btn(‚¨ÜÔ∏è) or plr.vy < 0 and can_jump) then
		plr.state = "jump"
	elseif(plr.vy > 0 and not(grnd) and can_jump) then
		plr.state = "fall"
	elseif (plr.vy == 0 and not(grnd) and can_jump) then
		plr.state = "midjump"
	else
		plr.state = "idle"
	end
	if(plr.state ~= prev_state) then
		set_i(plr,1)
	end
	debug_p = prev_state
	debug_c = plr.state
end

-->8
--animations

function animate_frame(obj)
	local dt = get_dt(obj)
	local t = get_t(obj)
	local i = get_i(obj)
	local n = get_n(obj)
	if time() - t >= dt then
		if(i >= n) then
			set_i(obj,1)
		else
			set_i(obj,i+1)
		end
		set_t(obj,time())
	end
end
-->8
--character


--the npc mode is just
--the npc type that it is
function get_dt(obj)
	local mode = obj.mode
	local state = obj.state
	return obj[mode][state].dt
end

function get_t(obj)
	return obj.t
end
function set_t(obj,t)
	obj.t = t
end

function get_i(obj)
 return obj.i
end
function set_i(obj,i)
	obj.i = i
end

function get_n(obj)
	local mode = obj.mode
	local state = obj.state
	return obj[mode][state].n
end

function get_sprite(obj)
	local mode = obj.mode
	local state = obj.state
	local i = obj.i
	return obj[mode][state].sprites[i]
end

function draw_spr(obj)
	if(obj.vis == true) then
		spr(
			get_sprite(obj),
			obj.x,
			obj.y,
			obj.w,
			obj.h,
			obj.flp
		)
	end
end

function set_vis(obj, val)
	obj.vis = val
end

function get_speed(obj)
	local mode = obj.mode
	return obj[mode].speed
end

function get_jump_height(obj)
	local mode = obj.mode
	return obj[mode].jump_height
end

function on_ground(obj)
	local mode = obj.mode
	local gx1 = obj[mode].gx1
	local gx2 = obj[mode].gx2
	local gy = obj[mode].gy

	local x1 = (obj.x+gx1)/8
	local x2 = (obj.x+gx2)/8
	local y = (obj.y+gy)/8

	local a = fget(mget(x1, y), groundflag)
	local b = fget(mget(x2, y), groundflag)
	return a or b
end

function bat_move(obj)
	
end

function move(obj)
	local prev_time = obj.t_m
	local dt = time() - prev_time
	if(dt > 0.1) then
		dt = 0.1
	end
	local vx = approach(obj.gvx,obj.vx,dt*30)
	if(not(obj.mode == "bat") and not(on_ground(obj))) then
		vx = obj.vx
	end
	local vy = obj.vy
	local prev_x = obj.x
	local prev_y = obj.y

	obj.x += vx * dt
	obj.y += vy * dt

	obj.vx = vx
	obj.vy += gravity*dt
	if(side_collide(obj)) then
		obj.x = prev_x
	end
	if(on_ground(obj)) then
		obj.vy = 0
		while(on_ground(obj)) do
			obj.y -= 1
		end
		obj.y += 1
	end
end

function get_rightmost(obj)
	local mode = obj.mode
	return obj[mode].rightmost
end

function get_leftmost(obj)
	local mode = obj.mode
	return obj[mode].leftmost
end

function get_topmost(obj)
	local mode = obj.mode
	return obj[mode].topmost
end

function get_bottommost(obj)
	local mode = obj.mode
	return obj[mode].bottommost
end

function side_collide(obj)
	local mode = obj.mode
	local x1 = (obj.x+obj[mode].gx1)/8
	local x2 = (obj.x+obj[mode].gx2)/8
	local y1 = (obj.y+obj[mode].topmost)/8
	local y2 = (obj.y+obj[mode].bottommost)/8

	local a = fget(mget(x1, y1), collision_flag)
	local b = fget(mget(x2, y1), collision_flag)
	local c = fget(mget(x1, y2), collision_flag)
	local d = fget(mget(x2, y2), collision_flag)
	return a or b or c or d
end

function change_mode(obj, mode)
	obj.mode = mode
	obj.i = 1
	obj.state = "idle" // change this to be a default state maybe
end

--top down collide prob not neccessary
-->8
--environment
function init_env()
 groundflag = 0
 gravity = 20
 collision_flag = 1
end


-->8
--change menu
function init_menu()
	menu_x = 112
	menu_y = 0
	menu_up = false
	circle_location = {
		x = 63,
		y = 63
	}
	menu_state = {
		w = 2,
		h = 2,
		rhino = {
			vis = true,
			sprite = 130,
			x = 96,
			y = 56,
		},
		frog = {
			vis = true,
			sprite = 132,
			x = 56,
			y = 24,
		},
		bat = {
			vis = true,
			sprite = 134,
			x = 16,
			y = 56,
		},
		fish = {
			vis = true,
			sprite = 136,
			x = 56,
			y = 88,
		},
	}
end

function menu_listener()
	if(btn(üÖæÔ∏è)) then
		x_offset = menu_x
		y_offset = menu_y
		menu_up = true
	else
		x_offset = 0
		y_offset = 0
		menu_up = false
	end
end

function menu_logic()
	if(btn(‚¨ÜÔ∏è) and menu_state.frog.vis) then
		circle_location.x = 63
		circle_location.y = 30
		change_mode(plr, "frog")
	elseif(btn(‚û°Ô∏è) and menu_state.rhino.vis) then
		circle_location.x = 103
		circle_location.y = 63
		change_mode(plr, "rhino")
	elseif(btn(‚¨ÖÔ∏è) and menu_state.bat.vis) then
		circle_location.x = 23
		circle_location.y = 63
		change_mode(plr, "bat")
	elseif(btn(‚¨áÔ∏è) and menu_state.fish.vis) then
		circle_location.x = 63
		circle_location.y = 95
		change_mode(plr, "fish")
	else
		circle_location.x = 63
		circle_location.y = 63
		change_mode(plr, "human")
	end
end

function draw_menu()
	if menu_state.rhino.vis then
		spr(
			menu_state.rhino.sprite,
			menu_state.rhino.x,
			menu_state.rhino.y,
			menu_state.w,
			menu_state.h
		)
	end
	if menu_state.frog.vis then
		spr(
			menu_state.frog.sprite,
			menu_state.frog.x,
			menu_state.frog.y,
			menu_state.w,
			menu_state.h
		)
	end
	if menu_state.bat.vis then
		spr(
			menu_state.bat.sprite,
			menu_state.bat.x,
			menu_state.bat.y,
			menu_state.w,
			menu_state.h
		)
	end
	if menu_state.fish.vis then
		spr(
			menu_state.fish.sprite,
			menu_state.fish.x,
			menu_state.fish.y,
			menu_state.w,
			menu_state.h
		)
	end
	circ(
		circle_location.x,
		circle_location.y,
		12,
		7
	)
end
-->8
--interpolation
function approach(goal, cur, dt)
	local diff = goal - cur
	if(diff > dt) then
		return cur + dt
	elseif(diff < (dt * -1)) then
		return cur - dt
	else
		return goal
	end
end
__gfx__
0000000033d333dd0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000511511550000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00700700515151550000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00077000151511550000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00077000444444440000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00700700444444440000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000424242420000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000848484840000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0000042004420000000000000000000000bbbbbb0bbbbbb000000000000000000000000000000000000760000000000000000000000000000000000000067000
000042004420000000000000000000050bb3663bbb3663bb0000000000000000e000000000000000000760000000000000000000000000000000000000067000
40042004420044000000000000000055bb367763b367763b00000000800000002e00000000000000000760000000000000000000000000000000000000067000
44444422442442000000000000000550b36772263677226b00000810010000002e00000222222000000760006666666677777777777770006666600000067777
02444244424420000000000000005550b36772263677226b0000000101000000ce00002eeeeeec00000760007777777766666666666670007777600000066666
0024fffffff200000000000000055550b35777763577776b511000111100011562e002ecccc6ccc0000760000000000000000000000670000007600000000000
00fff71ff71f00000000000000555500b33577333357733b0511007217201150c2e02ecccc6c77cc000760000000000000000000000670000007600000000000
00ffffffffff00000000000006666660b33333333333333b0051d011110d15006ccccccc666c72cc000760000000000000000000000670000007600000000000
000fff55fff000000006dddd66667266b33dd333b33dd33b000516d11d615000c666cc666c6c72cc000760000006700000000000000670000000000000076000
0000ffffff00000005666dd66666666db333333bbb33333b00001116611100006cccaaccccc677cc000760000006700000000000000670000000000000076000
006dddddddd6000056666666665556600bddddbbbbddddb00000001111000000c9a0c9accccccccc000760000006700000000000000670000000000000076000
066ddddddd56600056dd666dd605550000bbbbb000bbbb00000000011000000069a00c9aaaaaacc0000766666666700000077777000670000006666677776000
66d5dddddd5566000dddd6ddd00055500005bb000005bb0000000000000000009a0000c6dddd6c00000777777777700000076666000670000006777766666000
6d055dddd550560000660006600000550005bb000005bb0000000000000000009a0000006dd60000000000000000000000076000000670000006700000000000
00012222222000000660000066000000005bbbb0005bbbb00000000000000000a000000000000000000000000000000000076000000670000006700000000000
0001220012200000055000005500000005bbbbbb05bbbbbb00000000000000000000000000000000000000000000000000076000000670000006700000000000
000660000006600000066000000c6000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00dd660000bb66000066680000cc6a00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00d1660000b363000061160000666600000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
06666660066666600861166006cce660000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0666dd600636bb60066666800acc6cc0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0d161d600666bb600116816006666cc0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00d66600006366000016110000c6e600000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00066000000660000006600000066000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
04040040000000000000000004040000000000000000000000000055000000550000000000000000000000000000000000000000000000000404004004040040
04444400040404000404004004444440000000550000005500000550500005505000005500000055000000550000000000000000000000550444440004444400
04f1f140044444000444440004f1f14000000550500005505000672006dd672006dd0550500005500000055000000055000000550000055004f1f14004f1f140
0fffff0004f1f14004f1f1400fffff005000672006dd672006dd65600d6665600d66672006dd6720500067200000055000000550000067200fffff000fffff00
56dddd500fffff000fffff0056dddd5006dd65600d6665600d66505505005055050065600d66656006dd6560500067200000672056dd656056dddd5056dddd50
066ddd0056dddd5056dddd50066ddd000d66605505005055050050000000500000006055050060550d66605506dd656056dd65600d666055066ddd20266ddd00
00202000066ddd00066ddd0000202000050050000500000000000000000000000000500000005000050050000d6660550d666055050050002000000000000020
000000000000000000000000040400400404004000000000000000000000000000000000000000000000000000bb0bb000bb0bb000bb0bb00000000000000000
040400400404004004040040044444000444440004040040040400400404004000bb0bb00000000000bb0bb00b72372b0b72372b0b72372b00bb0bb000000000
04444400044444000444440004f1f14004f1f1400444440004444400044444000b72372b00bb0bb00b72372b0b77377b0b77377b0b77377b0b72372b00bb0bb0
04f1f14004f1f14004f1f1400fffff000fffff0004f1f14004f1f14004f1f1400b77377b0b72372b0b77377b3533353035333530353335300b77377b0b72372b
0fffff000fffff000fffff0056dddd5056dddd500fffff000fffff000fffff00353335300b77377b35333530535353505353535053535350353335300b77377b
56dddd5056dddd5056dddd50066ddd20266ddd0056dddd5056dddd5056dddd505353535035333530535353500b000b000b000b000b000b005353535035333530
066ddd00066ddd20066ddd202000000000000020266ddd00266ddd00266ddd200b000b00535353500b000b000b000b00b000b00000b000b00b000b0053535350
00202000002000000200000000000000000000000000020000002000000000000b000b000b000b000b000b0000000000000000000000000000b000b00b000b00
00000000000000000000000000000000000000000000000000000000000000000000000000000000110000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000011080801100000000000000111008080000000000bb0bb0
1100001100000000000000000000000000000000000000000000000000000000000000000000000011112120011080801110080801112120000000000b72372b
0180081011800811008008000080080000800800008008000080080000800800008008001180081101111110111121200111212011111110000000000b77377b
00122100001221001112211100122100001221000012210000122100001221001112211100122100000111000111111011111110011111000000000035333530
000dd000000dd000000dd000111dd111011dd110001dd100011dd110111dd111000dd000000dd000000d0d000001110001111100000d0d000000000053535350
0000000000000000000000000000000011000011011001101100001100000000000000000000000000000000000000000000000000000000000000000b000b00
000000000000000000000000000000000000000011000011000000000000000000000000000000000000000000000000000000000000000000000000b000b000
00000000000000000000000000000000000000000000000000000000000000006000000000000000000000000000000000000000000000000000000000000000
e000eee00e00eee000e0eee00e00eee0e000eee00e00eee000e0eee00e00eee00600000000000000000000000000000000000000000000000000000000000000
ce0ecccc0e0ecccc00eccccc0e0eccccce0ecccc0e0ecccc00eccccc0e0ecccc0066066600000000000000000000000000000000000000000000000000000000
6cccc72c0cccc72c00ccc72c0cccc72c6cccc72c06ccc72c006cc72c06ccc72c0000000000000000000000000000000000000000000000000000000000000000
c6cacccc06cacccc006acccc06caccccc6cacccc0ccacccc00cacccc0ccacccc6606606600000000000000000000000000000000000000000000000000000000
ca0cacac0a0cacac00acacac0a0cacacca0cacac0a0cacac00acacac0a0cacac0000000000000000000000000000000000000000000000000000000000000000
a00066600a00666000a066600a006660a00066600a00666000a066600a0066600066066600000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000600000000000000000000000000000000000000000000000000000000000000
__gff__
0003000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
__map__
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000085b6b6b6aaaa9c8c8c8c8c8dbbbba9a9a9
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000085b60000aa9c9fa5a5a5a58f8dbba5a5a9
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000085b600b69c9fa7a5a5a5a5a58f8da5a5a9
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000085a5a59c9f000000f9a40000008f8dabab
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000085a59c9fa5a50000b3b40000a5f98f8dab
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000859c9faaa5a5000000000000a5a5a58f8d
00aa01010100000000000101010101000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000858a000000000000000000000000a5a59d
010101010101010101010101010101010000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000858a00f9a4000000808100a5f9f9f9f99d
000000aaaaaaaa0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000858a00b3b4000000909100a5f9f9f9a59d
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000858a00000000000000000000f9a9a5a59d
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000859a8e000000000000000000a5a5a59e9b
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000085b89a8e00000000f9a4000000009e9bab
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000085b8b89a8ea5a5a5b3b4a5a5a59e9babab
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000085a6a5a59a8ea5a5a5a5a5a59e9ba5a5ac
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000008585a6a5a5ba9a8ea5a5a5a59e9bbda5a5ac
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000008585a6a6a6baba9a8b8b8b8b9bbdbdacacac
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000850000000000a500000000000000000000
